services:
    # These are the Twig extensions that create new function for
    # using them in the templates

    app.twig.img_extension:
        public:    false
        class:     AppBundle\Twig\ImgExtension
        tags:
            - { name: twig.extension }

    # локализация сообщений в шаблонах
    app.twig.intl_extension:
        public: false
        class:  Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    # свой шаблон для редактирования аплоада
    app.form.image_type_extension:
        class: AppBundle\Form\Extension\ImageTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FileType }

    # удаление картинок и файлов, которые больше не требуются
    app.entity.book.file_manager:
        class: AppBundle\EventListener\FManagerBooksSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    # Внедряет в сущности возможность доступа к компонентам симфони
    app.entity.container:
        class: AppBundle\EventListener\ContainerForDoctrineSubscriber
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    # управление мемкешем
    app.entity.book.cache:
        class: AppBundle\EventListener\CacheBooksSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    # Демо пример идентификации пользователя по ключу АПИ. Переписать метод getUsernameForApiKey()
    api_key_user_provider:
        class: AppBundle\Security\ApiKeyUserProvider

    apikey_authenticator:
        class:  AppBundle\Security\ApiKeyAuthenticator
        public: false